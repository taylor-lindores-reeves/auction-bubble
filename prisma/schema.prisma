// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Define the User model for app users
model User {
  id          Int    @id @default(autoincrement())
  username    String @unique
  listedItems Item[] @relation("ItemsListedByUser")
  bidsPlaced  Bid[]  @relation("BidsPlacedByUser")

  @@map("users")
}

// Define the Item model for auction items
model Item {
  id            Int      @id @default(autoincrement())
  title         String
  image         String
  description   String?
  slug          String   @unique
  sellerId      Int      @map("seller_id")
  seller        User     @relation("ItemsListedByUser", fields: [sellerId], references: [id])
  startingPrice Int      @map("starting_price") @db.Integer()
  reservePrice  Int      @map("reserve_price")
  bidIncrements Int      @map("bid_increments")
  endTime       DateTime @map("end_time")
  bids          Bid[]    @relation("BidsForItem")
  highestBidId  Int?     @unique @map("highest_bid_id")
  highestBid    Bid?     @relation("HighestBid", fields: [highestBidId], references: [id])

  @@map("items")
}

// Define the Bid model for bids on items
model Bid {
  id          Int      @id @default(autoincrement())
  bidderId    Int      @map("bidder_id")
  bidder      User     @relation("BidsPlacedByUser", fields: [bidderId], references: [id])
  itemId      Int      @map("item_id")
  item        Item     @relation("BidsForItem", fields: [itemId], references: [id])
  amount      Int
  createdAt   DateTime @default(now()) @map("created_at")
  listedItems Item?    @relation("HighestBid")

  @@map("bids")
}
